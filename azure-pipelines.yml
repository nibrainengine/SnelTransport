# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

trigger:
- main

stages:
#in the first two stages we validate our terraform file and create the resources to which the app can be deployed
  # - stage: validateterraform
  #   jobs:
  #   - job: validate
  #     continueOnError: false
  #     steps:
  #     - task: TerraformInstaller@0
  #       displayName: 'install'
  #       inputs:
  #         terraformVersion: '0.12.3'
      
  #     - task: TerraformTaskV2@2
  #       displayName: 'init'
  #       inputs:
  #         provider: 'azurerm'
  #         command: 'init'
  #         backendServiceArm: 'Traineeship-Terraform-connection'
  #         backendAzureRmResourceGroupName: 'csprg-Terraform'
  #         backendAzureRmStorageAccountName: 'terraformaccounteindtest'
  #         backendAzureRmContainerName: 'terraformstoragecontainer'
  #         backendAzureRmKey: 'terraformstoragecontainer.tfstate'

  #     - task: TerraformTaskV2@2
  #       displayName: 'validate'
  #       inputs:
  #         provider: 'azurerm'
  #         command: 'validate'

  # - stage: deployterraform
  #   jobs:
  #   - deployment: deploy_terraform
  #     continueOnError: false
  #     environment: 'dev'
  #     strategy:
  #       runOnce:
  #         deploy:
  #           steps:
  #             - checkout: self
  #             - task: TerraformInstaller@0 
  #               displayName: 'install'
  #               inputs:
  #                 terraformVersion: '0.12.3'

  #             - task: TerraformTaskV2@2
  #               displayName: 'init'
  #               inputs:
  #                 provider: 'azurerm'
  #                 command: 'init'
  #                 backendServiceArm: 'Traineeship-Terraform-connection'
  #                 backendAzureRmResourceGroupName: 'csprg-Terraform'
  #                 backendAzureRmStorageAccountName: 'terraformaccounteindtest'
  #                 backendAzureRmContainerName: 'terraformstoragecontainer'
  #                 backendAzureRmKey: 'terraformstoragecontainer.tfstate'
              
  #             - task: TerraformTaskV2@2
  #               displayName: 'plan'
  #               inputs:
  #                 provider: 'azurerm'
  #                 command: 'plan'
  #                 environmentServiceNameAzureRM: 'Traineeship-Terraform-connection'
              
  #             - task: TerraformTaskV2@2
  #               displayName: 'apply'
  #               inputs:
  #                 provider: 'azurerm'
  #                 command: 'apply'
  #                 environmentServiceNameAzureRM: 'Traineeship-Terraform-connection'

              

  - stage: Build
    displayName: Build stage
    jobs:
    - job: MavenPackageAndPublishArtifacts
      displayName: Maven Package and Publish Artifacts
      pool:
        vmImage: $(vmImageName)

      steps:
      
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'Traineeship-SonarCloud-Connection'
          organization: 'cim-cc-devops'
          scannerMode: 'Other'
          extraProperties: |
            # Additional properties that will be passed to the scanner,
            # Put one key=value per line, example:
            # sonar.exclusions=**/*.bin
            sonar.projectKey=CIM-CC-DevOps_FDD_Spring2
            sonar.projectName=FDD_Spring
      - task: Maven@3
        displayName: 'Maven Package'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'clean verify sonar:sonar'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          codeCoverageToolOption: JaCoCo
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          isJacocoCoverageReportXML: true
          sqMavenPluginVersionChoice: 'latest'
          

      - task: CopyFiles@2
        displayName: 'Copy Files to artifact staging directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/target/*.?(war|jar)'
          TargetFolder: $(Build.ArtifactStagingDirectory)

      - upload: $(Build.ArtifactStagingDirectory)
        artifact: drop
      - task: SonarCloudAnalyze@1
      
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
      
      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'Traineeship-SonarCloud-Connection'
          organization: 'cim-cc-devops'

  - stage: Deploy_stage
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeployLinuxWebApp
      displayName: Deploy Linux Web App
      environment: $(environmentName)
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy: SNELTRANSPORT'
              inputs:
                azureSubscription: 'Traineeship(1)(ac58b4ec-0810-44c4-9167-58a33cd159cd)'
                appType: 'webAppLinux'
                appName: 'SNELTRANSPORT'
                deployToSlotOrASE: true
                resourceGroupName: 'csprsg-Traineeship'
                slotName: 'blue-deployment'
                package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
                runtimeStack: 'TOMCAT|9.0-java11'

  - stage: Swap_between_slots
    displayName: Swap between test and production slot
    dependsOn: Deploy_stage
    condition: succeeded()
    jobs:
    - deployment: DeployLinuxWebApp
      displayName: Deploy Linux Web App
      environment: $(environmentName)
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureAppServiceManage@0
              inputs:
                azureSubscription: 'Traineeship(1)(ac58b4ec-0810-44c4-9167-58a33cd159cd)'
                Action: 'Swap Slots'
                WebAppName: 'SNELTRANSPORT'
                ResourceGroupName: 'csprsg-Traineeship'
                SourceSlot: 'blue-deployment'